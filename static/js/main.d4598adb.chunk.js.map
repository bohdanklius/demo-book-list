{"version":3,"sources":["api.js","components/Book/Book.jsx","components/BooksList/BooksList.jsx","variables.js","components/BookForm/BookForm.jsx","components/Header/Header.jsx","App.jsx","index.jsx"],"names":["API","a","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","Book","id","bookTitle","authorName","category","ISBN","handleEdit","handleRemove","Table","Row","Cell","Button","basic","color","content","onClick","then","text","removeBookAPI","BooksList","books","className","celled","Header","HeaderCell","Body","map","DASHBOARD","BOOKFORM","BOOK","uuidv4","options","key","value","BookForm","setBooks","editedBook","setNavigationActive","useState","newBook","setNewBook","useEffect","hasError","setHasError","handleChange","event","target","name","Form","onSubmit","preventDefault","prevState","length","some","book","setBooksAPI","Group","widths","Field","onChange","control","Input","label","placeholder","htmlFor","option","navigation","title","setEditedBook","type","App","navigationActive","Date","now","bookId","filter","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4598adb.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nconst API = 'http://localhost:3004/books';\n\nasync function setBooksAPI(data = {}) {\n  const response = await fetch(API, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data),\n  });\n  return response.json();\n}\n\nconst removeBookAPI = (id) => {\n  fetch(`${API}/${id}`, {\n    method: 'DELETE',\n  })\n    .then((response) => response.text());\n};\n\nconst editBookAPI = (id, data) => {\n  fetch(`${API}/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((response) => response.json());\n};\n\nconst getBooksAPI = () => fetch(API)\n  .then((response) => response.json())\n  .then((json) => json);\n\nexport {\n  getBooksAPI,\n  setBooksAPI,\n  removeBookAPI,\n  editBookAPI,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { removeBookAPI } from '../../api';\n\nexport const Book = ({\n  id,\n  bookTitle,\n  authorName,\n  category,\n  ISBN,\n  handleEdit,\n  handleRemove,\n}) => (\n  <Table.Row>\n    <Table.Cell>{bookTitle}</Table.Cell>\n    <Table.Cell>{authorName}</Table.Cell>\n    <Table.Cell>{category}</Table.Cell>\n    <Table.Cell>{ISBN}</Table.Cell>\n    <Table.Cell>\n      <Button\n        basic\n        color=\"grey\"\n        content=\"Edit\"\n        onClick={() => handleEdit(id)}\n      />\n      <Button\n        basic\n        color=\"red\"\n        content=\"Delete\"\n        onClick={() => {\n          handleRemove(id);\n          removeBookAPI(id);\n        }}\n      />\n    </Table.Cell>\n  </Table.Row>\n);\n\nBook.propTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  bookTitle: PropTypes.string.isRequired,\n  authorName: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  ISBN: PropTypes.string.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport { Book } from '../Book';\n\nexport const BooksList = ({ books, handleEdit, handleRemove }) => (\n  <div className=\"books\">\n    <Table celled>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Author</Table.HeaderCell>\n          <Table.HeaderCell>Category</Table.HeaderCell>\n          <Table.HeaderCell>ISBN</Table.HeaderCell>\n          <Table.HeaderCell>Action</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n\n        {books.map(({\n          id, bookTitle, authorName, category, ISBN,\n        }) => (\n          <Book\n            handleRemove={handleRemove}\n            handleEdit={handleEdit}\n            key={id}\n            id={id}\n            bookTitle={bookTitle}\n            authorName={authorName}\n            category={category}\n            ISBN={ISBN}\n          />\n        ))}\n      </Table.Body>\n\n    </Table>\n\n  </div>\n);\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    bookTitle: PropTypes.string.isRequired,\n    authorName: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    ISBN: PropTypes.string.isRequired,\n  })).isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nconst DASHBOARD = 'DASHBOARD';\nconst BOOKFORM = 'BOOKFORM';\n\nconst BOOK = {\n  id: uuidv4(),\n  bookTitle: '',\n  authorName: '',\n  category: '',\n  ISBN: '',\n};\n\nexport { BOOK, DASHBOARD, BOOKFORM };\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Form,\n  Input,\n} from 'semantic-ui-react';\nimport { editBookAPI, setBooksAPI } from '../../api';\nimport { BOOK, DASHBOARD } from '../../variables';\nimport './BookForm.scss';\n\nconst options = [\n  { key: 0, text: 'Category', value: 'Category' },\n  { key: 0, text: 'Other', value: 'Other' },\n  { key: 1, text: 'Picture books', value: 'Picture books' },\n  { key: 2, text: 'Educational material', value: 'Educational material' },\n  { key: 3, text: 'Crime, Thriller & Mystery', value: 'Crime, Thriller & Mystery' },\n  { key: 4, text: 'Science Fiction & Fantasy', value: 'Science Fiction & Fantasy' },\n  { key: 5, text: 'Biographies', value: 'Biographies' },\n  { key: 6, text: 'Teaching & higher education', value: 'Teaching & higher education' },\n];\n\nexport const BookForm = ({ setBooks, editedBook, setNavigationActive }) => {\n  const [newBook, setNewBook] = useState(BOOK);\n\n  useEffect(() => {\n    if (editedBook) {\n      setNewBook({ ...newBook, ...editedBook });\n    }\n  }, [editedBook]);\n\n  const [hasError, setHasError] = useState({\n    bookTitle: false,\n    authorName: false,\n    category: false,\n    ISBN: false,\n  });\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setNewBook({ ...newBook, [name]: value });\n    setHasError({ ...hasError, [name]: false });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (newBook.bookTitle === '') {\n      setHasError((prevState) => ({ ...prevState, bookTitle: true }));\n    }\n\n    if (newBook.authorName === '') {\n      setHasError((prevState) => ({ ...prevState, authorName: true }));\n    }\n\n    if (newBook.category === '') {\n      setHasError((prevState) => ({ ...prevState, category: true }));\n    }\n\n    if (newBook.ISBN === '') {\n      setHasError((prevState) => ({ ...prevState, ISBN: true }));\n    }\n\n    if (\n      newBook.id\n      && newBook.bookTitle.length\n      && newBook.authorName.length\n      && newBook.category.length\n      && newBook.ISBN.length\n    ) {\n      setBooks((prevState) => {\n        if (prevState.some((book) => book.id === newBook.id)) {\n          editBookAPI(newBook.id, newBook);\n          return prevState.map((book) => (book.id === newBook.id ? newBook : book));\n        }\n        return [...prevState, newBook];\n      });\n\n      setBooksAPI(newBook);\n\n      setNewBook(BOOK);\n\n      setNavigationActive(DASHBOARD);\n    }\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group widths=\"equal\">\n        <div className=\"wrapper\">\n          <Form.Field\n            className={hasError.bookTitle ? 'error' : ''}\n            value={newBook.bookTitle}\n            onChange={handleChange}\n            name=\"bookTitle\"\n            control={Input}\n            label=\"Book title\"\n            placeholder=\"Book title\"\n          />\n          {hasError.bookTitle && (\n            <p className=\"error__title\">\n              Pleace enter the Book title\n            </p>\n          )}\n        </div>\n        <div className=\"wrapper\">\n          <Form.Field\n            className={hasError.authorName ? 'error' : ''}\n            value={newBook.authorName}\n            onChange={handleChange}\n            name=\"authorName\"\n            control={Input}\n            label=\"Author name\"\n            placeholder=\"Author name\"\n          />\n          {hasError.authorName && (\n            <p className=\"error__title\">\n              Pleace enter the Author name\n            </p>\n          )}\n        </div>\n        <div className=\"wrapper\">\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n          <label htmlFor=\"category\" className=\"category\">Category</label>\n          <select\n            className={hasError.category ? 'error' : ''}\n            name=\"category\"\n            label=\"Category\"\n            value={newBook.category}\n            onChange={handleChange}\n            id=\"category\"\n          >\n            {options.map((option) => (\n              <option key={option.key} value={option.value}>{option.text}</option>\n            ))}\n          </select>\n          {hasError.category && (\n            <p className=\"error__title\">\n              Pleace enter the Category\n            </p>\n          )}\n\n        </div>\n        <div className=\"wrapper\">\n          <Form.Field\n            className={hasError.ISBN ? 'error' : ''}\n            value={newBook.ISBN}\n            onChange={handleChange}\n            name=\"ISBN\"\n            control={Input}\n            label=\"ISBN\"\n            placeholder=\"ISBN\"\n          />\n          {hasError.ISBN && (\n            <p className=\"error__title\">\n              Pleace enter the ISBN\n            </p>\n          )}\n        </div>\n      </Form.Group>\n\n      <Form.Field control={Button}>Add a Book</Form.Field>\n    </Form>\n  );\n};\n\nBookForm.propTypes = {\n  setBooks: PropTypes.func.isRequired,\n  editedBook: PropTypes.shape({\n    id: PropTypes.number,\n    bookTitle: PropTypes.string,\n    authorName: PropTypes.string,\n    category: PropTypes.string,\n    ISBN: PropTypes.string,\n  }).isRequired,\n  setNavigationActive: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { BOOKFORM, DASHBOARD, BOOK } from '../../variables';\nimport './Header.scss';\n\nconst navigation = [\n  { id: 1, title: 'Dashboard' },\n  { id: 2, title: 'Add a Book' },\n];\n\nexport const Header = ({ setNavigationActive, setEditedBook }) => (\n\n  <div className=\"header\">\n    {navigation.map(({ id, title }) => (\n      <button\n        onClick={() => {\n          if (id === 1) {\n            setNavigationActive(DASHBOARD);\n          } else {\n            setNavigationActive(BOOKFORM);\n          }\n          setEditedBook(BOOK);\n        }}\n        className=\"header__button\"\n        key={id}\n        type=\"button\"\n      >\n        {title}\n      </button>\n    ))}\n  </div>\n);\n\nHeader.propTypes = {\n  setNavigationActive: PropTypes.func.isRequired,\n  setEditedBook: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { getBooksAPI } from './api';\nimport './App.css';\nimport { Header, BooksList, BookForm } from './components';\nimport { DASHBOARD, BOOKFORM } from './variables';\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const [navigationActive, setNavigationActive] = useState(DASHBOARD);\n  const [editedBook, setEditedBook] = useState({\n    id: Date.now(),\n    bookTitle: '',\n    authorName: '',\n    category: '',\n    ISBN: '',\n  });\n\n  useEffect(() => {\n    getBooksAPI()\n      .then((response) => setBooks(response));\n  }, []);\n\n  const handleEdit = (bookId) => {\n    setNavigationActive(BOOKFORM);\n    setEditedBook(books.find(({ id }) => id === bookId));\n  };\n\n  const handleRemove = (bookId) => {\n    setBooks(books.filter((book) => book.id !== bookId));\n  };\n\n  return (\n    <div>\n      <Header\n        setNavigationActive={setNavigationActive}\n        setEditedBook={setEditedBook}\n      />\n      {navigationActive === DASHBOARD && (\n        <BooksList\n          handleRemove={handleRemove}\n          handleEdit={handleEdit}\n          books={books}\n        />\n      )}\n\n      {navigationActive === BOOKFORM && (\n        <BookForm\n          setNavigationActive={setNavigationActive}\n          setBooks={setBooks}\n          editedBook={editedBook}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}